{"version":3,"file":"index.mjs","sources":["src/index.js"],"sourcesContent":["import postcss from 'postcss';\nimport postcssNesting from 'postcss-nesting';\n\nconst nesting = postcssNesting();\n\n// functional selector match\nconst functionalSelectorMatch = /(^|[^\\w-])(%[_a-zA-Z]+[_a-zA-Z0-9-]*)([^\\w-]|$)/i;\n\n// plugin\nexport default postcss.plugin('postcss-extend-rule', rawopts => {\n\t// options ( onFunctionalSelector, onRecursiveExtend, onUnusedExtend)\n\tconst opts = Object(rawopts);\n\tconst extendMatch = opts.name instanceof RegExp\n\t\t? opts.name\n\t: 'name' in opts\n\t\t? new RegExp(`^${opts.name}$`, 'i')\n\t: 'extend';\n\n\treturn (root, result) => {\n\t\tconst extendedAtRules = new WeakMap();\n\n\t\t// for each extend at-rule\n\t\troot.walkAtRules(extendMatch, extendAtRule => {\n\t\t\tlet parent = extendAtRule.parent;\n\n\t\t\twhile (parent.parent && parent.parent !== root) {\n\t\t\t\tparent = parent.parent;\n\t\t\t}\n\n\t\t\t// do not revisit visited extend at-rules\n\t\t\tif (!extendedAtRules.has(extendAtRule)) {\n\t\t\t\textendedAtRules.set(extendAtRule, true);\n\n\t\t\t\t// selector identifier\n\t\t\t\tconst selectorIdMatch = getSelectorIdMatch(extendAtRule.params);\n\n\t\t\t\t// extending rules\n\t\t\t\tconst extendingRules = getExtendingRules(selectorIdMatch, extendAtRule);\n\n\t\t\t\t// if there are extending rules\n\t\t\t\tif (extendingRules.length) {\n\t\t\t\t\t// replace the extend at-rule with the extending rules\n\t\t\t\t\textendAtRule.replaceWith(extendingRules);\n\n\t\t\t\t\t// transform any nesting at-rules\n\t\t\t\t\tconst cloneRoot = postcss.root().append(parent.clone());\n\n\t\t\t\t\tnesting(cloneRoot);\n\n\t\t\t\t\tparent.replaceWith(cloneRoot);\n\t\t\t\t} else {\n\t\t\t\t\t// manage unused extend at-rules\n\t\t\t\t\tconst unusedExtendMessage = `Unused extend at-rule \"${extendAtRule.params}\"`;\n\n\t\t\t\t\tif (opts.onUnusedExtend === 'throw') {\n\t\t\t\t\t\tthrow extendAtRule.error(unusedExtendMessage, { word: extendAtRule.name });\n\t\t\t\t\t} else if (opts.onUnusedExtend === 'warn') {\n\t\t\t\t\t\textendAtRule.warn(result, unusedExtendMessage);\n\t\t\t\t\t} else if (opts.onUnusedExtend !== 'ignore') {\n\t\t\t\t\t\textendAtRule.remove();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// manage revisited extend at-rules\n\t\t\t\tconst revisitedExtendMessage = `Revisited extend at-rule \"${extendAtRule.params}\"`;\n\n\t\t\t\tif (opts.onRecursiveExtend === 'throw') {\n\t\t\t\t\tthrow extendAtRule.error(revisitedExtendMessage, { word: extendAtRule.name });\n\t\t\t\t} else if (opts.onRecursiveExtend === 'warn') {\n\t\t\t\t\textendAtRule.warn(result, revisitedExtendMessage);\n\t\t\t\t} else if (opts.onRecursiveExtend !== 'ignore') {\n\t\t\t\t\textendAtRule.remove();\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\troot.walkRules(functionalSelectorMatch, functionalRule => {\n\t\t\t// manage encountered functional selectors\n\t\t\tconst functionalSelectorMessage = `Encountered functional selector \"${functionalRule.selector}\"`;\n\n\t\t\tif (opts.onFunctionalSelector === 'throw') {\n\t\t\t\tthrow functionalRule.error(functionalSelectorMessage, { word: functionalRule.selector.match(functionalSelectorMatch)[1] });\n\t\t\t} else if (opts.onFunctionalSelector === 'warn') {\n\t\t\t\tfunctionalRule.warn(result, functionalSelectorMessage);\n\t\t\t} else if (opts.onFunctionalSelector !== 'ignore') {\n\t\t\t\tfunctionalRule.remove();\n\t\t\t}\n\t\t});\n\t};\n});\n\nfunction getExtendingRules(selectorIdMatch, extendAtRule) {\n\t// extending rules\n\tconst extendingRules = [];\n\n\t// for each rule found from root of the extend at-rule with a matching selector identifier\n\textendAtRule.root().walkRules(selectorIdMatch, matchingRule => {\n\t\t// nesting selectors for the selectors matching the selector identifier\n\t\tconst nestingSelectors = matchingRule.selectors.filter(\n\t\t\tselector => selectorIdMatch.test(selector)\n\t\t).map(\n\t\t\tselector => selector.replace(selectorIdMatch, '$1&$3')\n\t\t).join(',');\n\n\t\t// matching ruleâ€™s cloned nodes\n\t\tconst nestingNodes = matchingRule.clone().nodes;\n\n\t\t// clone the matching rule as a nested rule\n\t\tlet clone = extendAtRule.clone({\n\t\t\tname: 'nest',\n\t\t\tparams: nestingSelectors,\n\t\t\tnodes: nestingNodes,\n\t\t\t// empty the extending rules, as they are likely non-comforming\n\t\t\traws: {}\n\t\t});\n\n\t\t// preserve nesting of parent rules and at-rules\n\t\tlet parent = matchingRule.parent;\n\n\t\twhile (parent && (parent.type === 'rule' || parent.type === 'atrule')) {\n\t\t\tclone = parent.clone().removeAll().append([ clone ]);\n\n\t\t\tparent = parent.parent;\n\t\t}\n\n\t\t// push the matching rule to the extending rules\n\t\textendingRules.push(clone);\n\t});\n\n\t// return the extending rules\n\treturn extendingRules;\n}\n\nfunction getSelectorIdMatch(selectorIds) {\n\t// escape the contents of the selector id to avoid being parsed as regex\n\tconst escapedSelectorIds = postcss.list.comma(selectorIds).map(\n\t\tselectorId => selectorId.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&')\n\t).join('|');\n\n\t// selector unattached to an existing selector\n\tconst selectorIdMatch = new RegExp(`(^|[^\\\\w-]!.!#)(${escapedSelectorIds})([^\\\\w-]|$)`, '');\n\n\treturn selectorIdMatch;\n}\n"],"names":["nesting","postcssNesting","functionalSelectorMatch","postcss","plugin","rawopts","opts","Object","extendMatch","name","RegExp","root","result","extendedAtRules","WeakMap","walkAtRules","extendAtRule","parent","has","set","selectorIdMatch","getSelectorIdMatch","params","extendingRules","getExtendingRules","length","replaceWith","cloneRoot","append","clone","unusedExtendMessage","onUnusedExtend","error","word","warn","remove","revisitedExtendMessage","onRecursiveExtend","walkRules","functionalRule","functionalSelectorMessage","selector","onFunctionalSelector","match","matchingRule","nestingSelectors","selectors","filter","test","map","replace","join","nestingNodes","nodes","raws","type","removeAll","push","selectorIds","escapedSelectorIds","list","comma","selectorId"],"mappings":"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"}